<?php

namespace Yomaah\structureBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Yomaah\structureBundle\Entity\Page;

/**
 * articleRepo
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepo extends EntityRepository
{
    public function findByPage($pageUrl, $site = null)
    {
        if ($site == null)
        {
            $query = $this->getEntityManager()
                ->createQuery('select a, p from yomaahBundle:Article a join a.page p where p.pageUrl = :url order by a.artId asc')
                ->setParameter('url',$pageUrl);
        }else
        {
            $query = $this->getEntityManager()
                ->createQuery('select a, p from yomaahBundle:Article a join a.page p join p.site s where p.pageUrl = :url and s.idSite = :site order by a.artId asc')
                ->setParameters(array('url' => $pageUrl,'site' => $site));
        }
        return $query->getResult();
    }

    public function findDefaultArticle($position, $pageUrl, \Yomaah\structureBundle\Entity\Page $page)
    {
        $em = $this->getEntityManager();
        $new = new Article();
        $new->setArtTitle('Mon titre');
        $new->setArtContent('<p>Ceci est un article</p>');
        $new->setArtDate(new \Datetime());
        $new->setPng($em->getRepository('yomaahBundle:Png')->find(3));
        $new->setPage($page);
        $new->setArtId($this->getNewId($position, $page, $em));
        $em->persist($new);
        $em->flush();
        return $new;
    }

    public function getNewId($position, $page, $em)
    {
        if ($page->getSite() == null)
        {
            $sql = 'select max(a.artId) from yomaahBundle:Article a join a.page p where p.pageUrl = :url';
            $query = $em->createQuery($sql)->setParameter('url',$page->getPageUrl());
        }else
        {
            $sql =  'select max(a.artId) from yomaahBundle:Article a join a.page p join p.site s where p.pageUrl= :url and s.idSite = :site';
            $query = $em->createQuery($sql)
                ->setParameters(array('site' => $page->getSite()->getIdSite(), 'url' => $page->getPageUrl()));
        }
        /*
         * En prod
            $sql = 'select max(a.artId) from yomaahBundle:Article a join a.page p';
            $query = $em->createQuery($sql);
         */
        $id = $query->getSingleResult(); 
        $maxId = (int) $id[1] + 1;

        /**
         * DÃ©but == 0
         */
        if ($position == "0")
        {
            if ($page->getSite() == null)
            {
                $query = $this->getEntityManager()
                    ->createQuery('select a from yomaahBundle:Article a join a.page p where p.pageUrl = :url order by a.artId asc')
                        ->setParameter('url',$page->getPageUrl());
            }else
            {
                $query = $this->getEntityManager()
                    ->createQuery('select a from yomaahBundle:Article a join a.page p join p.site s where p.pageUrl = :url and s.idSite =:site order by a.artId asc')
                    ->setParameters(array('url' => $page->getPageUrl(),'site' => $page->getSite()->getIdSite()));
            }
            $articles = $query->getResult();
            $nb = count($articles);
            $minId = $articles[0]->getArtId();
            for ($i = 0; $i < $nb;$i++)
            {
                if ($i != $nb - 1)
                {
                    $this->changeId($articles[$i],$articles[$i+1]);
                }else
                {
                    $articles[$i]->setArtId($maxId);
                }
            }
            $j = $nb - 1;
            foreach ($articles as $a)
            {
                $this->getEntityManager()->createQuery('update yomaahBundle:Article a set a.artId = :artId where a.id = :id')
                    ->setParameters(array('artId' => $articles[$j]->getArtId(),'id' => $articles[$j]->getId()))
                    ->execute();
                $j--;
            }
            return $minId;
        }else
        {
            return $maxId;
        }
    }

    private function changeId($first, $second)
    {
        $first->setArtId($second->getArtId());
    }
}
